@using Microsoft.AspNetCore.Identity
@using TecBurguer.Areas.Identity.Data

@model IEnumerable<TecBurguer.Models.Hamburguer>

@inject UserManager<LoginCliente> UserManager
@inject SignInManager<LoginCliente> SignInManager

@{
    ViewData["Title"] = "Home Page";
}

<style>
    main{
        margin-top: 0;
    }

.SetaHover {
    position: absolute;
    top: 50%;
    left: -30px; 
    font-size: 30px;
    color: white;
    transform: translateY(-50%);
    opacity: 0; 
    transition: all 0.5s ease;
    pointer-events: none;
}

.ImagemWrapper:hover .SetaHover {
    left: 10px;  
    opacity: 1;
}
</style>

<div class="BannerContent" id="BannerContent">
    @* <img class="banner" src="~/css/Imagens/Banner.png"> *@
    <div class="conteudoBannerContent">

        <div class="BannerBall1"></div>
        <div class="BannerBall2"></div>

        <div class="bannerWrapper">
            <img class="BurgerImageBanner active" id="bannerPrincipal" src="/css/Imagens/BurguerLogo.png" alt="Hamburguer">
        </div>

        <div class="textos">
            <h1>TEC</h1>
            <h1>BURGER</h1>
        </div>
    </div>

    <script>
        // Array de imagens vindo do Razor
        var imagens = [
            @foreach (var item in Model)
            {
                    @: "@Html.DisplayFor(modelItem => item.Imagem)",
            }
        ];

        var index = 0;
        var bannerWrapper = document.querySelector(".bannerWrapper");

        function trocarImagem() {
            var atual = document.querySelector(".BurgerImageBanner.active");

            // cria novo elemento img
            var proxima = document.createElement("img");
            proxima.src = imagens[index];
            proxima.className = "BurgerImageBanner";
            bannerWrapper.appendChild(proxima);

            void proxima.offsetWidth;

            proxima.classList.add("active");

            if (atual) {
                atual.classList.remove("active");
                atual.classList.add("exit");
                setTimeout(() => {
                    bannerWrapper.removeChild(atual);
                }, 1000); 
            }

            // avança índice
            index = (index + 1) % imagens.length;
        }

        // troca a cada 10s
        setInterval(trocarImagem, 10000);

        // inicia
        trocarImagem();
    </script>

    
    <div class="BannerOverlay">
        <a href="#OfertasDiarias" class="ScrollDown" pointer>Saiba Mais</a>
        <a href="#OfertasDiarias" class="ScrollDown" pointer>
            <span class="arrow"></span>
        </a>
    </div>
</div>

<div class="Content1" id="OfertasDiarias">
    <h2 class="OfertasDiariasTitle">OFERTAS DO DIA</h2>

</div>

<div class="Content2" id="RecomendacoesDoChefe">
    <h2>RECOMENDAÇÕES DO CHEFE</h2>

</div>

<div id="FacaLogin" class="interface">
    <img src="~/css/Imagens/BurguerLogo.png">
    <div>
        <h3>Quer fazer um pedido?</h3>
        <p>Crie uma conta ou faça login para prosseguir com o pedido.</p>
        <div>
            <a class="BotaoCriarConta" asp-area="Identity" asp-page="/Account/Register">
                Criar conta
            </a>
            <a class="BotaoLogin" asp-area="Identity" asp-page="/Account/Login">
               Login
           </a>

        </div>
    </div>
</div>


<div class="Content1" id="Cardapio">
    <h2>CARDAPIO</h2>

    <div class="CarrosselWrapper" style="position: relative; display: flex; align-items: center;">
        <!-- Seta esquerda -->
        <button class="SetaCarrossel" onclick="scrollCarrossel('esquerda')" 
                style="position: absolute; left: -40px; z-index: 10;">&#8592;</button>

        <!-- Container de hambúrgueres -->
        <div class="ConteudoContent1" style="display: flex; overflow-x: auto; scroll-behavior: smooth; gap: 20px;">
            @foreach (var item in Model)
            {
                <div class="BlocoHamburguer" style="flex: 0 0 auto; width: 250px;">
                    <img src=@Html.DisplayFor(modelItem => item.Imagem) 
                         class="ImagemHamburguer" 
                         onerror="this.src='/css/Imagens/BurguerLogo.png'">

                    <h3 class="TituloHamburguer" id="NomeBurguer_@item.IdHamburguer">
                        @Html.DisplayFor(modelItem => item.Nome)
                    </h3>
                    <p class="DescricaoHamburguer">
                        @Html.DisplayFor(modelItem => item.Descricao)
                    </p>
                    
                    <div class="BottomInfoBurguer">
                        <h4 class="PrecoBurguer" id="PrecoBurguer_@item.IdHamburguer">R$ @item.Preco</h4>

                        <div class="BotoesDoHamburguer">
                            @if (SignInManager.IsSignedIn(User))
                            {
                                <a class="CartBurguer"
                                   onclick="adicionarAoCarrinho(@item.IdHamburguer, '@UserManager.GetUserName(User)')">
                                   <img src="~/css/Imagens/IconCart.png">
                                </a>
                            }
                            else
                            {
                                <a class="CartBurguer" onclick="mostrarBotaoLogin()">
                                    <img src="~/css/Imagens/IconCart.png">
                                </a>
                            }

                            <a class="SaibaMaisHamburguer" asp-controller="Hamburgueres" 
                               asp-action="Details" asp-route-id="@item.IdHamburguer">
                               Saiba Mais
                            </a>
                        </div>
                    </div>
                </div>
            }
        </div>

        <!-- Seta direita -->
        <button class="SetaCarrossel" onclick="scrollCarrossel('direita')" 
                style="position: absolute; right: -40px; z-index: 10;">&#8594;</button>
    </div>

    <a>Acesse nosso cardapio completo</a>
</div>

<script>
    function scrollCarrossel(direcao) {
        const container = document.querySelector('.ConteudoContent1');
        const scrollAmount = 300; // distância de rolagem em px
        if (direcao === 'direita') {
            container.scrollBy({ left: scrollAmount, behavior: 'smooth' });
        } else {
            container.scrollBy({ left: -scrollAmount, behavior: 'smooth' });
        }
    }
</script>

<script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
<script src="~/js/site.js"></script>
